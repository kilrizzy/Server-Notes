##Create Droplet

Ubuntu 14.04

Enable Backups

##Reset Root Pass

ssh root@111.111.111.111

##Enable Longer SSH Time

```
sudo vim /etc/ssh/ssh_config
```

Add to bottom and :wq to save:

ServerAliveInterval 300

##Install Web Server

https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-14-04

```
sudo apt-get update
sudo apt-get -y install nginx mysql-server
```

(ip should now resolve)

```
sudo mysql_install_db
sudo mysql_secure_installation
```

## PHP7

'''
apt-get install python-software-properties
sudo add-apt-repository ppa:ondrej/php-7.0
sudo apt-get update
apt-get install php7.0-fpm php7.0-mysql php7.0-curl
```

Config:

```
sudo vim /etc/php/7.0/fpm/php.ini
```

--optional/not req.d anymore? (type "/" and search for "cgi.fix_pathinfo", <insert> uncomment and set to 1)
Set default upload_max_filesize and post_max_size
Also you can enable curl by uncommenting
(type ESC then :wq ENTER to save)

(Note: you may also need to all this line to /etc/nginx/nginx.conf under the "http{" line)
client_max_body_size 100M;
```

```
sudo service php7.0-fpm restart
```

Edit file /etc/nginx/sites-available/default with NginX - Default value

- https://raw.githubusercontent.com/kilrizzy/Server-Notes/master/sites-avaliable/default-php7

##GD
```
sudo apt-get install php7.0-gd
sudo service nginx restart
```

##Install PHPMyAdmin

https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-with-nginx-on-an-ubuntu-14-04-server 

[ERROR With PHP7...until better way need to install manually to /usr/share/nginx/html/(phpminname)]

```
sudo apt-get update
sudo apt-get -y install phpmyadmin
```

(tab to skip prompt asking apache)

```
sudo ln -s /usr/share/phpmyadmin /usr/share/nginx/html
```

(http://server_domain_or_IP/phpmyadmin)

##Change PHPMyAdmin url

```
cd /usr/share/nginx/html
sudo mv phpmyadmin moresecurephpmyadmin
```

[ERROR With PHP7...until better way need to install manually to /usr/share/nginx/html/(phpminname)]

## Virtual Hosts

```
sudo mkdir -p /var/www/website.com/public_html
sudo chown -R www-data:www-data /var/www/example.com/public_html
sudo chmod 755 /var/www
```

Add virtual host file to:

/etc/nginx/sites-available/website.com.conf

```
sudo ln -s /etc/nginx/sites-available/website.com.conf /etc/nginx/sites-enabled/website.com.conf
sudo service nginx restart
```
(fix pastcgi_pass: fastcgi_pass unix:/run/php/php7.0-fpm.sock; )
(optional - hosts file should display website now)

## MySQL Backup

```
sudo apt-get -y install automysqlbackup
```
(Postfix -> none)

## Fail2Ban

```
sudo apt-get -y install fail2ban
sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
```

## Install Git
```
sudo apt-get -y install git
git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
```

## SSH
```
ssh-keygen 
```
<enter> <enter> <enter>
(copy pub key to bitbucket)
```
cat ~/.ssh/id_rsa.pub
```

git clone [path]

## Deploy
```
git remote add production ssh://root@111.111.111.111/var/www/website.com/public_html
git push production
```

## Encrypt

Install Let's Encrypt

https://adambard.com/blog/using-letsencrypt-with-nginx/

https://blog.rudeotter.com/lets-encrypt-ssl-certificate-nginx-ubuntu/

```
sudo service nginx stop
cd ~
git clone https://github.com/letsencrypt/letsencrypt
letsencrypt/letsencrypt-auto
```

Note if auto doesn't work, nginx still isn't supported. Try:

```
./letsencrypt-auto --agree-dev-preview --server \
    https://acme-v01.api.letsencrypt.org/directory auth
```

Update sites-available/...conf

instead of 80:
listen 0.0.0.0:443 ssl;

After server_name:

ssl on;
ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

Force ssl:

server{
    listen 80;
    server_name example.com www.example.com;

    location / {
        rewrite ^(.*)$ https://example.com$1 permanent;
    }

}

Turn back on / restart nginx

```
sudo service nginx start
```

## Dropbox Backup

http://www.howopensource.com/2014/09/simple-linux-backup-to-dropbox/

cd ~
sudo apt-get install curl
mkdir dropbox
cd dropbox
curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
chmod 755 dropbox_uploader.sh
./dropbox_uploader.sh
(Input app info from: https://www.dropbox.com/developers/apps)
Add backup bash script to /root/dropbox - https://github.com/kilrizzy/Server-Notes/blob/master/backup.sh
Edit server name in bash script and make sure file is executable
Try running bash to test, might need to re-add credentials (./backup.sh)
```
crontab -e
ADD: 
00 00 * * *     /root/dropbox/backup.sh 2>&1 >> /var/log/backup.log
```

## Deploy

Create new writable blank file at /usr/share/nginx/html/deploy/deploy.log
Create new file called domain.php with the following:

```
<?php
$web_root_dir = '/var/www/domain.com/public_html';
//
$git_bin_path = 'git';
//Navigate to web root
$pullMessage = shell_exec('cd ' . $web_root_dir . ' && ' . $git_bin_path  . ' pull');
file_put_contents('deploy.log', date('m/d/Y h:i:s a') . " Pulled: " . $commit_hash . "\n", FILE_APPEND);
```

Add bitbucket webhook to url: IPADDRESS/deploy/domain.php
