##Install Web Server

```
sudo apt-get update
sudo apt-get -y install nginx mysql-server unzip
sudo mysql_install_db
sudo mysql_secure_installation
```

## PHP7

'''
apt-get install python-software-properties
sudo add-apt-repository ppa:ondrej/php
sudo apt-get update
apt-get install php7.0-fpm php7.0-mysql php7.0-curl php7.0-gd php7.0-mbstring php7.0-xml
```

# PHP Config:

```
sudo vim /etc/php/7.0/fpm/php.ini
```

- Set default upload_max_filesize and post_max_size
- Uncomment extensions: php_mbstring.dll

# NGINX Config

```
sudo vim /etc/nginx/nginx.conf
```

(Add to /etc/nginx/nginx.conf under the "http{" line):

```
client_max_body_size 100M;
```

#Update default nginx config

```
sudo vim /etc/nginx/sites-available/default
```

Delete all existing lines by typing:

```
:1,$d
```

And paste in the following:

```
server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    root /usr/share/nginx/html;
    index index.php index.html index.htm;
    server_name server_domain_name_or_IP;
    location / {
        try_files $uri $uri/ =404;
    }
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        client_max_body_size 100m;
    }
}
```

```
sudo service php7.0-fpm restart
sudo service nginx restart
```

## PHPMyAdmin

wget https://files.phpmyadmin.net/phpMyAdmin/4.5.4.1/phpMyAdmin-4.5.4.1-all-languages.zip -P /usr/share/nginx/html
unzip /usr/share/nginx/html/phpMyAdmin-4.5.4.1-all-languages.zip -d /usr/share/nginx/html
mv /usr/share/nginx/html/phpMyAdmin-4.5.4.1-all-languages /usr/share/nginx/html/customphpmin
rm /usr/share/nginx/html/phpMyAdmin-4.5.4.1-all-languages.zip

## Virtual Hosts
(use NGINX-GENERATOR)

```
sudo mkdir -p /var/www/website.com/public_html
sudo chown -R www-data:www-data /var/www/example.com/public_html
sudo chmod 755 /var/www
```

Add virtual host file to:
/etc/nginx/sites-available/website.com.conf

```
sudo ln -s /etc/nginx/sites-available/website.com.conf /etc/nginx/sites-enabled/website.com.conf
sudo service nginx restart
```

## MySQL Backup

```
sudo apt-get -y install automysqlbackup
```
(Postfix -> none)

## Fail2Ban

```
sudo apt-get -y install fail2ban
sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
```

## Install Git
```
sudo apt-get -y install git
git config --global user.name "Your Name"
git config --global user.email "youremail@domain.com"
```

## SSH
```
ssh-keygen 
```
<enter> <enter> <enter>
(copy pub key to bitbucket)
```
cat ~/.ssh/id_rsa.pub
```

## Composer
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

git clone [path]

## Deploy
```
git remote add production ssh://root@111.111.111.111/var/www/website.com/public_html
git push production
```

## Let's Encrypt

```
sudo apt-get update
sudo apt-get -y install git bc
sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
```

Create bash file that will run

```
mkdir /root/scripts
touch /root/scripts/letsencrypt-autorenew.sh
sudo vim /root/scripts/letsencrypt-autorenew.sh
```

Paste in (change domain):

```
#!/bin/bash
#Run commands needed to update certs for each website
/opt/letsencrypt/letsencrypt-auto certonly -a webroot --agree-tos --renew-by-default --webroot-path=/var/www/DOMAIN.com/public_html -d DOMAIN.com
```

Clone server block in site config, change Listen line to:

```
listen 0.0.0.0:443 ssl;
```

sudo service nginx restart

Test with (run once to fill in email):

```
bash /root/scripts/letsencrypt-autorenew.sh
```

On success, add lines to SSL server config block (below server name):

```
ssl on;
ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
```

Add to Cron:

```
crontab -e
30 2  * * *     bash /root/scripts/letsencrypt-autorenew.sh 2>&1 >> /var/log/letsencrypt-autorenew.log
```

Force SSL:

```
server{
    listen 80;
    server_name example.com www.example.com;
    
    location ^~ /.well-known/ {
        allow all;
    }
        
    location / {
        rewrite ^(.*)$ https://example.com$1 permanent;
    }

}
```


## Dropbox Backup

http://www.howopensource.com/2014/09/simple-linux-backup-to-dropbox/

cd ~
sudo apt-get install curl
mkdir dropbox
cd dropbox
curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o dropbox_uploader.sh
chmod 755 dropbox_uploader.sh
./dropbox_uploader.sh
(Input app info from: https://www.dropbox.com/developers/apps)
Add backup bash script to /root/dropbox - https://github.com/kilrizzy/Server-Notes/blob/master/backup.sh
Edit server name in bash script and make sure file is executable
Try running bash to test, might need to re-add credentials (./backup.sh)
```
crontab -e
ADD: 
00 00 * * *     /root/dropbox/backup.sh 2>&1 >> /var/log/backup.log
```

## Deploy

update info
